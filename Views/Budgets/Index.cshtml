@model IEnumerable<BudgetManager.Models.Budget>

@{
    ViewData["Title"] = "Budgets";
}
<style>
    .badge-red {
        background-color: red;
        color: white;
        position: absolute;
        top: 0;
        right: 0;
        padding: 3px 6px;
        border-radius: 50%;
    }

    /* Add a background color for the selected row */
    tbody tr.selected {
        background-color: #c3e6cb; /* Use your desired color */
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Add click event to each table row
         $('tbody tr').click(function () {
            // Toggle the 'selected' class on the clicked row
            $(this).toggleClass('selected');
        });

        // Submit the form when the "Approve Selected Budgets" button is clicked
        $('#approveSelectedButton').click(function () {
            updateSelectedBudgetsInput();
        }); 

        $('#flagSelectedButton').click(function () {
            updateSelectedBudgetsInput_Flag();
        });

        $('#selectAllCheckbox').click(function () {
            var isChecked = $(this).prop('checked');

            // Toggle the 'selected' class for all rows in the table based on the checkbox state
            $('tbody tr').toggleClass('selected', isChecked);

        });

        $('#editSelectedButton').click(function () {
            updateSelectedBudgetsInput_Edit();
        });

        $('#SelectedBudgetsForExport').click(function () {
            exportSelectedBudgets();
        });
    });

    function updateSelectedBudgetsInput() {
        var selectedBudgetIds = [];
        $('tbody tr.selected').each(function () {
            // Extract the BudgetID from the data attribute
            var budgetID = $(this).data('budget-id');
            selectedBudgetIds.push(budgetID);
        });

        // Log the selected budget IDs for debugging
        console.log("Selected Budget IDs: ", selectedBudgetIds);

        // Update the value of the hidden input with the selected budget IDs
        $('#SelectedBudgets').val(selectedBudgetIds.join(','));

        // Log the form data for debugging
        console.log("Form Data: ", $('#approveBudgetsForm').serialize());

        // Submit the form
        $('#approveBudgetsForm').submit();
    }

    function updateSelectedBudgetsInput_Flag() {
        var selectedBudgetIds = [];
        $('tbody tr.selected').each(function () {
            // Extract the BudgetID from the data attribute
            var budgetID = $(this).data('budget-id');
            selectedBudgetIds.push(budgetID);
        });

        // Log the selected budget IDs for debugging
        console.log("Selected Budget IDs: ", selectedBudgetIds);

        // Update the value of the hidden input with the selected budget IDs
        $('#SelectedBudgets').val(selectedBudgetIds.join(','));

        // Log the form data for debugging
        console.log("Form Data: ", $('#flagBudgetsForm').serialize());

        // Submit the form
        $('#flagBudgetsForm').submit();
    }

    function updateSelectedBudgetsInput_Edit() {
        var selectedBudgetIds = [];
        $('tbody tr.selected').each(function () {
            // Extract the BudgetID from the data attribute
            var budgetID = $(this).data('budget-id');
            selectedBudgetIds.push(budgetID);
        });

        // Log the selected budget IDs for debugging
        console.log("Selected Budget IDs for Edit: ", selectedBudgetIds);

        // Redirect to the EditBudgets action with the selected budget IDs
        window.location.href = '/Budgets/EditBudgets?SelectedBudgets=' + selectedBudgetIds.join(',');

     
    }   
    function exportSelectedBudgets() {
            // Get the selected budget IDs
            var selectedBudgetIds = [];
            $('tbody tr.selected').each(function () {
                var budgetID = $(this).data('budget-id');
                selectedBudgetIds.push(budgetID);
            });

        window.location.href = '/Budgets/ExportToExcel?SelectedBudgets=' + selectedBudgetIds.join(',');
        }
</script>


<h1>Budgets</h1>


<div class="row">
    <div class="col-md-9" style="display:flex">
        <p>
        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin") || User.IsInRole("Master"))
        {
                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Create")'">Create Budget</button>
                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Upload")'">Upload Budget</button>

                <form asp-action="GetAcceptedBudgets" style="margin-left: 5px">
                    <button type="submit" class="btn btn-danger">
                        Approved Budgets

                    </button>
                </form>

                @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                {
                    <form asp-action="GetUnApproved" style="margin-left: 5px">
                        <button type="submit" class="btn btn-warning">
                            Pending Approval
                           
                                <span class="badge badge-red">@ViewBag.UnApprovedBudgetCount</span>
                            
                        </button>
                    </form>
                }
            
                <form asp-action="GetFlaggedBudgets" style="margin-left: 5px">
                    <button type="submit" class="btn btn-warning">Flagged Budgets
                       
                            <span class="badge badge-red">@ViewBag.FlaggedBudgetCount</span>
                        
                    </button>
                </form>

        }
        
        </p>
    </div>
    
</div>

<br/>
<div class="col-md-3">

    <form asp-action="ShowSearchResults" class="form-inline float-right">

        <div class="form-group">

            <label for="SearchPhrase" class="control-label">Enter:</label><br/>

            <input name="SearchPhrase" class="textbox" />

            <input type="submit" value="Search" class="btn btn-primary" />

        </div>

    </form>

    

</div>
<br />
<br />
<div style="display:flex; margin: 7px;">
    <input type="checkbox" id="selectAllCheckbox" style="background-color:blue; padding:5px" /> <label>SELECT ALL</label>
</div>
<br>
<br>
<div style="display:flex">
  <div stype="display: flex">
      @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
          {
            <button type="button" id="approveSelectedButton" class="btn btn-primary">Approve Selected Budgets</button>
           @*  <button type="button" id="flagSelectedButton" class="btn btn-primary">Flag Selected Budgets</button> *@

       
      }
        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin") || User.IsInRole("Master"))
        {
        // ... other buttons
        
            <button type="button" id="editSelectedButton" class="btn btn-primary">Edit Selected Budgets</button>
        
        }
</div>



<button type="button" id="SelectedBudgetsForExport" class="btn btn-secondary" style="margin-left:5px">Export Selected Budgets</button>
</div>

<form asp-controller="Budgets" asp-action="ApproveSelectedBudgets" method="post" id="approveBudgetsForm">
    <input type="hidden" id="SelectedBudgets" name="SelectedBudgets" />
</form>

@* <form asp-controller="Budgets" asp-action="flagSelectedBudgets" method="post" id="flagBudgetsForm">
    <input type="hidden" id="SelectedBudgets" name="SelectedBudgets" />
</form> *@

<table class="table table-custom">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.FinYr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Yr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StoreNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StoreName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeptName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeptNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Month)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MonthNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OperationalDays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week3)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week4)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week5)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week6)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DailyGPP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalGPP_AC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalGPP_YRAC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalGPP_BC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalGPP_YRBC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DailyGP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DailySales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week1GP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week2GP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week3GP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week4GP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week5GP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week6GP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week1Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week2Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week3Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week4Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week5Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week6Sales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MonthGP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MonthSales)
            </th>
            
            <th></th>
            <th></th>
            <th></th>
           
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {

         <tr class="selectable-row" data-budget-id="@item.BudgetID" id="selectAll">
                <td>
                    @if ((User.IsInRole("SuperAdmin") || User.IsInRole("Admin")) && (item.Accepted == null || item.Accepted == false))
                    {
                        <form asp-action="AcceptBudget" asp-route-id="@item.BudgetID" method="post">
                            <button type="submit" class="btn btn-danger">Accept Budget</button>
                        </form>
                    }
                </td>
   
            <td>
                @Html.DisplayFor(modelItem => item.FinYr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Yr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StoreNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StoreName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeptName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeptNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Month)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MonthNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OperationalDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week3)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week4)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week5)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week6)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DailyGPP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalGPP_AC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalGPP_YRAC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalGPP_BC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalGPP_YRBC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DailyGP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DailySales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week1GP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week2GP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week3GP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week4GP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week5GP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week6GP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week1Sales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week2Sales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week3Sales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week4Sales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week5Sales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Week6Sales)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MonthGP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MonthSales)
            </td>
            <td>
                @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin") || User.IsInRole("Master"))
                {
                <a asp-action="Edit" asp-route-id="@item.BudgetID" class="btn btn-primary">Edit</a>
                } 
            </td>
            <td>

                <a asp-action="Details" asp-route-id="@item.BudgetID" class="btn btn-success">Details</a>
            </td>
            <td>
                    @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                {
                    <a asp-action="Delete" asp-route-id="@item.BudgetID" class="btn btn-danger">Delete</a>
                }
            </td>
            

        </tr>
}
    </tbody>
 </table>
